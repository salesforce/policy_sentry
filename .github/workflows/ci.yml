# .github/workflows/test.yml

name: continuous-integration

on:
  workflow_dispatch:
  push:
    branches:
      - master
  pull_request:

permissions:
  contents: read

env:
  MIN_PYTHON_VERSION: "3.10"
  TERRAFORM_VERSION: "1.10"

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: ${{ env.MIN_PYTHON_VERSION }}
      - uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
      - uses: pre-commit/action@2c7b3805fd2a0fd8c1884dcaebf91fc102a13ecd  # v3.0.1

  sanity:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: ${{ env.MIN_PYTHON_VERSION }}
      - run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install invoke

      - run: invoke build.build-package
      - run: invoke sanity.validate-sdist
      - run: invoke sanity.validate-wheel

  ci:
    needs: [pre-commit, sanity]
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Setup Python
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: ${{ env.MIN_PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt

      - run: invoke build.install-package
      - run: invoke test.type-check
      - run: invoke integration.clean
      - run: invoke integration.version
      - run: invoke integration.initialize
      - run: invoke unit.pytest
      - run: invoke integration.query
      - run: invoke integration.write-policy

  python-version:
    needs: [pre-commit, sanity]
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: true
      matrix:
        python: ['3.11', '3.12', '3.13', '3.14']
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: ${{ matrix.python }}
          allow-prereleases: true

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install -r requirements-dev.txt

      - run: invoke build.install-package
      - run: invoke integration.clean
      - run: invoke integration.version
      - run: invoke integration.initialize
      - run: invoke unit.pytest
      - run: invoke integration.query
      - run: invoke integration.write-policy
